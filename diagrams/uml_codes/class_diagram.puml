@startuml ClassDiagram
' Coffee Shop Domain Class Diagram
skinparam defaultFontName "Arial"
skinparam defaultFontSize 14
skinparam dpi 150
skinparam shadowing false
skinparam nodesep 44
skinparam ranksep 46
skinparam classAttributeIconSize 0
left to right direction

class User {
  +id: int
  +firstName: string
  +lastName: string
  +email: string
  +passwordHash: string
  +phone: string
  +address: string
  +role: UserRole
  +isAdmin(): bool
}

class Customer {
  +createdAt: DateTime
  +getActiveCart(): CartItem[]
  +placeOrder(cart): Order
  +submitContact(subject, body): ContactMessage
}

class Admin {
  +lastLogin: DateTime
  +updateCatalog(product: Product): void
  +adjustOrderStatus(order: Order, status: OrderStatus): void
  +respondToTicket(ticket: ContactMessage, note: string): void
}

class Product {
  +id: int
  +name: string
  +description: string
  +imagePath: string
  +price: decimal
  +discountPrice: decimal
  +createdAt: DateTime
  +isAvailable(): bool
}

class CartItem {
  +id: int
  +quantity: int
  +createdAt: DateTime
  +updateQuantity(qty: int): void
}

class Order {
  +id: int
  +total: decimal
  +status: OrderStatus
  +createdAt: DateTime
  +markProcessed(): void
  +complete(): void
}

class OrderItem {
  +id: int
  +quantity: int
  +price: decimal
  +lineTotal(): decimal
}

class PaymentTransaction {
  +id: int
  +orderId: int
  +userId: int
  +amount: decimal
  +gatewayRef: string
  +status: PaymentStatus
  +createdAt: DateTime
  +recordOutcome(status: PaymentStatus, details: string): void
}

class Reservation {
  +id: int
  +reservationDate: Date
  +seatNumber: string
  +createdAt: DateTime
  +status: ReservationStatus
  +confirm(): void
  +cancel(reason: string): void
}

class SeatReservation {
  +id: int
  +seatRow: int
  +seatCol: int
  +reservedAt: DateTime
}

class ContactMessage {
  +id: int
  +name: string
  +email: string
  +message: string
  +status: ContactStatus
  +createdAt: DateTime
  +markInProgress(): void
  +markResolved(): void
}

enum UserRole {
  user
  admin
}

enum OrderStatus {
  Pending
  Processed
  Completed
  Cancelled
}

enum PaymentStatus {
  Pending
  Authorized
  Settled
  Failed
  Refunded
}

enum ReservationStatus {
  Pending
  Confirmed
  Cancelled
}

enum ContactStatus {
  New
  InProgress
  Resolved
  Archived
}

User <|-- Customer
User <|-- Admin

Customer "1" -- "0..*" CartItem : owns >
CartItem "*" --> "1" Product : references >

Customer "1" -- "0..*" Order : places >
Order "1" o-- "1..*" OrderItem : contains >
OrderItem "*" --> "1" Product : priced from >

Order "1" -- "0..*" PaymentTransaction : settled by >

Customer "1" -- "0..*" Reservation : books >
Reservation "0..*" -- "0..*" SeatReservation : allocates >
SeatReservation "*" --> "1" Customer : selected by >

Customer "1" -- "0..*" ContactMessage : submits >
Admin "0..1" -- "0..*" ContactMessage : resolves >

@enduml
